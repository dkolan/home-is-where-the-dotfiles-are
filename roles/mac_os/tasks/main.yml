- name: Install oh-my-zsh
  homebrew:
    name: zsh
    state: present

- name: Get the path to zsh
  ansible.builtin.shell: "which zsh"
  register: zsh_path

- name: Change default shell to zsh for the current user
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ zsh_path.stdout }}"
  become: true
  when: zsh_path.stdout != ""

- name: Oh-My-Zsh
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

- name: Install oh-my-zsh plugins
  homebrew:
    name: 
      - zsh-completions
      - zsh-autosuggestions
      - zsh-syntax-highlighting
      - fzf
      - zoxide
    state: present

- name: Symlink zsh-syntax-highlighting plugin
  ansible.builtin.file:
    src: "/opt/homebrew/opt/zsh-syntax-highlighting"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    state: link

- name: Symlink zsh-autosuggestions plugin
  ansible.builtin.file:
    src: "/opt/homebrew/opt/zsh-autosuggestions"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    state: link
    
- name: Manage dotfiles
  block:
    - name: Check if existing dotfile is a symlink
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/{{ item }}"
      register: dotfile_stat
      loop: "{{ dotfiles }}"

    - name: Remove existing dotfile if it is not a symlink
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: absent
      loop: "{{ dotfiles }}"

    - name: Symlink dotfiles
      ansible.builtin.file:
        src: "{{ playbook_dir }}/dotfiles/{{ item }}"
        dest: "{{ ansible_env.HOME }}/{{ item }}"
        state: link
      loop: "{{ dotfiles }}"
  vars:
    dotfiles:
      - .zshrc
      - .p10k.zsh
